import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AllExceptionsFilter } from './common/filters/http-exception.filter';
import { ValidationPipe, BadRequestException } from '@nestjs/common';
import * as cookieParser from 'cookie-parser';
import { ExpressAdapter } from '@nestjs/platform-express';
import * as express from 'express';

async function bootstrap() {
  const server = express(); // ‚¨ÖÔ∏è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è express-—Å–µ—Ä–≤–µ—Ä—É
  const app = await NestFactory.create(AppModule, new ExpressAdapter(server)); // ‚¨ÖÔ∏è –∞–¥–∞–ø—Ç–µ—Ä

  // cookie parser
  app.use(cookieParser());

  // –≥–ª–æ–±–∞–ª—å–Ω–∏–π –≤–∞–ª—ñ–¥–∞—Ü—ñ–π–Ω–∏–π –ø–∞–π–ø
  app.useGlobalPipes(
    new ValidationPipe({
      transform: true,
      whitelist: true,
      forbidNonWhitelisted: true,
      exceptionFactory: (errors) => {
        return new BadRequestException(
          errors.map((err) => ({
            field: err.property,
            errors: Object.values(err.constraints || {}),
          })),
        );
      },
    }),
  );

  // –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä
  app.useGlobalFilters(new AllExceptionsFilter());

  // üî• –í–ö–õ–Æ–ß–ê–Ñ–ú–û CORS –¥–ª—è —Ñ—Ä–æ–Ω—Ç—É
  app.enableCors({
    origin: 'http://localhost:5173',
    credentials: true,
  });

  // swagger
  const config = new DocumentBuilder()
    .setTitle('Ecommerce API')
    .setDescription('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –¥–æ API —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—É')
    .setVersion('1.0')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  const port = process.env.PORT || 4000;
  await app.listen(port);

  console.log(`üöÄ Server running on http://localhost:${port}`);
  console.log(`üìò Swagger available at http://localhost:${port}/api`);
}

bootstrap();
