import {
  Controller,
  Get,
  Post,
  Patch,
  Param,
  Body,
  Delete,
  Query,
} from '@nestjs/common';
import { OrdersService } from './orders.service';
import { CreateOrderDto } from './dto/create-order.dto';
import { UpdateOrderDto } from './dto/update-order.dto';
import { FilterOrdersDto } from './dto/filter-orders.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiQuery,
  ApiParam,
} from '@nestjs/swagger';
import { OrderOutputDto } from './dto/order.output';

@ApiTags('Orders')
@Controller('orders')
export class OrdersController {
  constructor(private readonly ordersService: OrdersService) {}

  // üü© –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  @Post()
  @ApiOperation({ summary: '–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' })
  @ApiResponse({ status: 201, type: OrderOutputDto })
  create(@Body() dto: CreateOrderDto) {
    return this.ordersService.create(dto);
  }

  // üü¶ –°–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—î—é/–ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é
  @Get()
  @ApiOperation({ summary: '–°–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—î—é/–ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é' })
  findAll(@Query() query: FilterOrdersDto) {
    return this.ordersService.findAll(query);
  }

  // üü¶ –°–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  @Get('user/:userId')
  @ApiOperation({ summary: '–°–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' })
  findByUser(@Param('userId') userId: string) {
    return this.ordersService.findByUser(userId);
  }

  // üü¶ –ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å
  @Get('search')
  @ApiOperation({ summary: '–ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å' })
  search(@Query('query') query: string) {
    return this.ordersService.search(query);
  }

  // üü¶ –î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  @Get(':id')
  @ApiOperation({ summary: '–î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' })
  findOne(@Param('id') id: string) {
    return this.ordersService.findOne(id);
  }

  // üüß –û–Ω–æ–≤–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  @Patch(':id')
  @ApiOperation({ summary: '–û–Ω–æ–≤–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' })
  update(@Param('id') id: string, @Body() dto: UpdateOrderDto) {
    return this.ordersService.update(id, dto);
  }

  // üüß –û–Ω–æ–≤–∏—Ç–∏ –ª–∏—à–µ —Å—Ç–∞—Ç—É—Å
  @Patch(':id/status')
  @ApiOperation({ summary: '–û–Ω–æ–≤–∏—Ç–∏ –ª–∏—à–µ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' })
  updateStatus(@Param('id') id: string, @Body('status') status: string) {
    return this.ordersService.updateStatus(id, status);
  }

  // üüß –î–æ–¥–∞—Ç–∏/–æ–Ω–æ–≤–∏—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä
  @Post(':id/comment')
  @ApiOperation({ summary: '–î–æ–¥–∞—Ç–∏ –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' })
  addComment(@Param('id') id: string, @Body('comment') comment: string) {
    return this.ordersService.addComment(id, comment);
  }

  // üü¶ –Ü—Å—Ç–æ—Ä—ñ—è —Å—Ç–∞—Ç—É—Å—ñ–≤ (mock/demo)
  @Get(':id/status-history')
  @ApiOperation({ summary: '–Ü—Å—Ç–æ—Ä—ñ—è —Å—Ç–∞—Ç—É—Å—ñ–≤ –ø–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—é' })
  statusHistory(@Param('id') id: string) {
    return this.ordersService.statusHistory(id);
  }

  // üü¶ –ï–∫—Å–ø–æ—Ä—Ç –∑–∞–º–æ–≤–ª–µ–Ω—å
  @Get('export')
  @ApiOperation({ summary: '–ï–∫—Å–ø–æ—Ä—Ç –∑–∞–º–æ–≤–ª–µ–Ω—å (CSV)' })
  async export(@Query() query: FilterOrdersDto) {
    return this.ordersService.exportOrders(query);
  }

  // üüß –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  @Post(':id/repeat')
  @ApiOperation({ summary: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' })
  repeat(@Param('id') id: string) {
    return this.ordersService.repeatOrder(id);
  }

  // üü¶ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  @Get('stats/general')
  @ApiOperation({ summary: '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è—Ö' })
  stats() {
    return this.ordersService.getStats();
  }

  // üü¶ –Ü–Ω–≤–æ–π—Å (mock/demo)
  @Get(':id/invoice')
  @ApiOperation({ summary: '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —ñ–Ω–≤–æ–π—Å (PDF/HTML)' })
  invoice(@Param('id') id: string) {
    return this.ordersService.invoice(id);
  }

  // üü• –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  @Delete(':id')
  @ApiOperation({ summary: '–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' })
  remove(@Param('id') id: string) {
    return this.ordersService.remove(id);
  }
}
